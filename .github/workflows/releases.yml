name: Releases
on:
  
  pull_request:
    types:
      - closed
      - opened
      - edited
      - synchronize


jobs:
  build-on-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Install GitVersion
        run: |
          wget https://github.com/GitTools/GitVersion/releases/download/5.12.0/gitversion-linux-x64-5.12.0.tar.gz
          tar -xzvf gitversion-linux-x64-5.12.0.tar.gz

  merged-pr:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
      
      - name: Set up Git identity
        run: |
          git config user.email "yaswanth6240@gmail.com"
          git config user.name "yaswanth6240"

      - name: Install dependencies
        run: npm install

      - name: Debug github
        run: |
          echo "${{ github.event_name }}"
          echo "${{ github.event }}"
          echo "${{ github.event.pull_request.title }}"

      - name: Run standard-version
        run: npx standard-version --release-as patch

      - name: Push tags and changelog
        run: |
          git push --follow-tags origin main
        env:
          GH_TOKEN: ${{ secrets.RELEASE_TOKEN }}

      - name: Publish package on NPM ðŸ“¦
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PUBLISH_TOKEN }}

      # - name: make config
      #   run: npm run makeconfig

      # - name: Conventional Changelog Action
      #   id: changelog
      #   uses: TriPSs/conventional-changelog-action@v5.1.0
      #   with:
      #     github-token: ${{ secrets.RELEASE_TOKEN }}
      #     version-file: './package.json,./package-lock.json'
      #     release-count: 0
      #     preset: "conventionalcommits"
      #     config-file-path: config.js

      # - name: create release
      #   uses: actions/create-release@v1
      #   if: ${{ steps.changelog.outputs.skipped == 'false' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
      #   with:
      #     tag_name: "${{ steps.changelog.outputs.tag }}"
      #     release_name: "${{ steps.changelog.outputs.tag }}"
      #     body: ${{ steps.changelog.outputs.clean_changelog }}
